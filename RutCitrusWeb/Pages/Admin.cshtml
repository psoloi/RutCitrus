@page
@model AdminModel
@{
    ViewData["Title"] = "管理员界面";
}

<div class="container-fluid px-4 py-3">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="admin-title mb-1">管理员控制面板</h1>
            <p class="text-secondary">欢迎回来, @Model.Username</p>
        </div>
        <div class="d-flex align-items-center gap-3">
            <span class="ip-badge">IP: @Model.UserIP</span>
            <a href="/Logout" class="btn btn-outline-danger">退出登录</a>
        </div>
    </div>

    <!-- 系统概览卡片组 -->
    <div class="row g-4 mb-4">
        <div class="col-md-3">
            <div class="overview-card">
                <div class="overview-icon cpu">
                    <i class="fas fa-microchip"></i>
                </div>
                <div class="overview-info">
                    <h3>CPU 使用率</h3>
                    <div class="d-flex align-items-end">
                        <span class="overview-value">42%</span>
                        <span class="trend-up ms-2">
                            <i class="fas fa-arrow-up"></i> 2.5%
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="overview-card">
                <div class="overview-icon memory">
                    <i class="fas fa-memory"></i>
                </div>
                <div class="overview-info">
                    <h3>内存使用</h3>
                    <div class="d-flex align-items-end">
                        <span class="overview-value memory-value">@Model.SystemInfo.AvailableMemory</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="overview-card">
                <div class="overview-icon storage">
                    <i class="fas fa-hdd"></i>
                </div>
                <div class="overview-info">
                    <h3>存储空间</h3>
                    <div class="d-flex align-items-end">
                        <span class="overview-value">@Model.SystemInfo.DiskAvailable</span>
                        <span class="text-secondary ms-2">/ @Model.SystemInfo.DiskTotal</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="overview-card">
                <div class="overview-icon users">
                    <i class="fas fa-users"></i>
                </div>
                <div class="overview-info">
                    <h3>在线用户</h3>
                    <div class="d-flex align-items-end">
                        <span class="overview-value">@Model.Users.Count(u => u.IsOnline)</span>
                        <span class="text-secondary ms-2">/ @Model.Users.Count 总用户</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- 系统信息和用户列表 -->
    <div class="row g-4">
        <div class="col-md-6">
            <div class="content-card">
                <div class="card-header">
                    <h2>系统信息</h2>
                    <button class="btn btn-sm btn-outline-primary" onclick="updateSystemInfo()">
                        <i class="fas fa-sync-alt"></i>
                    </button>
                </div>
                <div class="system-info-grid">
                    <div class="info-item">
                        <span class="info-label">操作系统</span>
                        <span class="info-value">@Model.SystemInfo.OSDescription</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">系统架构</span>
                        <span class="info-value">@Model.SystemInfo.OSArchitecture</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">CPU 信息</span>
                        <span class="info-value">@Model.SystemInfo.CPUInfo</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">进程内存</span>
                        <span class="info-value memory-usage">@Model.SystemInfo.ProcessMemoryUsage</span>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="content-card">
                <div class="card-header">
                    <h2>在线用户</h2>
                    <div class="header-actions">
                        <div class="search-box">
                            <i class="fas fa-search"></i>
                            <input type="text" placeholder="搜索用户...">
                        </div>
                    </div>
                </div>
                <div class="users-table">
                    @foreach (var user in Model.Users)
                    {
                        <div class="user-row">
                            <div class="user-info">
                                <div class="status-dot @(user.IsOnline ? "online" : "offline")"></div>
                                <div>
                                    <div class="user-name">@user.ComputerName</div>
                                    <div class="user-ip">@user.PublicIP</div>
                                </div>
                            </div>
                            <div class="user-actions">
                                <button class="btn btn-sm btn-outline-danger" onclick="kickUser('@user.ComputerName', '@user.PublicIP')">
                                    <i class="fas fa-user-slash"></i>
                                    踢出
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .admin-title {
        color: #1d2432;
        font-size: 1.75rem;
        font-weight: 600;
    }

    .ip-badge {
        background: #f2f4f7;
        color: #4a5568;
        padding: 6px 12px;
        border-radius: 6px;
        font-family: monospace;
    }

    .overview-card {
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        border: 1px solid #e2e8f0;
        height: 100%;
    }

    .overview-icon {
        width: 48px;
        height: 48px;
        border-radius: 12px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 16px;
    }

    .overview-icon.cpu { background: #ebf8ff; color: #3182ce; }
    .overview-icon.memory { background: #e6fffa; color: #319795; }
    .overview-icon.storage { background: #faf5ff; color: #805ad5; }
    .overview-icon.users { background: #f0fff4; color: #38a169; }

    .overview-icon i {
        font-size: 24px;
    }

    .overview-info h3 {
        color: #4a5568;
        font-size: 14px;
        margin-bottom: 8px;
    }

    .overview-value {
        color: #1a202c;
        font-size: 24px;
        font-weight: 600;
    }

    .trend-up {
        color: #38a169;
        font-size: 14px;
    }

    .content-card {
        background: white;
        border-radius: 8px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        border: 1px solid #e2e8f0;
    }

    .card-header {
        padding: 16px 20px;
        border-bottom: 1px solid #e2e8f0;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .card-header h2 {
        color: #1a202c;
        font-size: 18px;
        font-weight: 600;
        margin: 0;
    }

    .system-info-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 16px;
        padding: 20px;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 4px;
    }

    .info-label {
        color: #718096;
        font-size: 14px;
    }

    .info-value {
        color: #1a202c;
        font-family: monospace;
    }

    .search-box {
        position: relative;
        width: 240px;
    }

    .search-box input {
        width: 100%;
        padding: 8px 12px 8px 36px;
        border: 1px solid #e2e8f0;
        border-radius: 6px;
        font-size: 14px;
    }

    .search-box i {
        position: absolute;
        left: 12px;
        top: 50%;
        transform: translateY(-50%);
        color: #a0aec0;
    }

    .users-table {
        padding: 12px 20px;
    }

    .user-row {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 12px 0;
        border-bottom: 1px solid #e2e8f0;
    }

    .user-row:last-child {
        border-bottom: none;
    }

    .user-info {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .status-dot {
        width: 8px;
        height: 8px;
        border-radius: 50%;
    }

    .status-dot.online { background: #48bb78; }
    .status-dot.offline { background: #e53e3e; }

    .user-name {
        color: #2d3748;
        font-weight: 500;
    }

    .user-ip {
        color: #718096;
        font-size: 14px;
        font-family: monospace;
    }
</style>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

@section Scripts {
    <script>
        // 实时更新内存信息
        function updateSystemInfo() {
            fetch('/api/systeminfo')
                .then(response => response.json())
                .then(data => {
                    document.querySelector('.memory-value').textContent = data.availableMemory;
                    document.querySelector('.memory-usage').textContent = data.processMemoryUsage;
                });
        }

        // 每5秒更新一次
        setInterval(updateSystemInfo, 5000);

        let currentKickTarget = null;

        function kickUser(computerName, ip) {
            currentKickTarget = { computerName, ip };
            const modal = new bootstrap.Modal(document.getElementById('kickModal'));
            modal.show();
        }

        function confirmKick() {
            const reason = document.getElementById('kickReason').value.trim();
            if (!reason) {
                alert('请输入踢出原因');
                return;
            }

            fetch('/api/kick', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    computerName: currentKickTarget.computerName,
                    ip: currentKickTarget.ip,
                    reason: reason
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    bootstrap.Modal.getInstance(document.getElementById('kickModal')).hide();
                    // 刷新用户列表
                    location.reload();
                } else {
                    alert('操作失败：' + data.message);
                }
            })
            .catch(error => {
                alert('操作失败：' + error);
            });
        }
    </script>
} 